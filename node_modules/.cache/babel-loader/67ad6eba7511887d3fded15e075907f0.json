{"ast":null,"code":"import Products from \"../../../src/component/Products\";\nconst cart = [];\n\nconst handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n\n  switch (action.type) {\n    case \"ADDITEM\":\n      //Check id product is already exist\n      const exist = state.find(x => x.id === product.id);\n\n      if (exist) {\n        //increast the quantity\n        return state.map(x => x.id === product.id ? { ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, { ...product,\n          qty: 1\n        }];\n      }\n\n      break;\n\n    case \"DELITEM\":\n      const exist1 = state.find(x => x.id === product.id);\n\n      if (exist1) {\n        if (exist1.qty === 1) {\n          return state.filter(x => x.id !== exist1.id);\n        } else {\n          return state.map(x => x.id === product.id ? { ...x,\n            qty: x.qty - 1\n          } : x);\n        }\n      }\n\n      break;\n\n    case \"HAPUS\":\n      const exist2 = state.find(x => x.id === product.id);\n      return state.filter(x => x.id !== exist2.id);\n      break;\n\n    default:\n      return state;\n      break;\n  }\n};\n\nexport default handleCart;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/React-one/e-commerce/ECommerce-App-using-React-JS/src/redux/reducer/handleCart.js"],"names":["Products","cart","handleCart","state","action","product","payload","type","exist","find","x","id","map","qty","exist1","filter","exist2"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iCAArB;AAEA,MAAMC,IAAI,GAAG,EAAb;;AAEA,MAAMC,UAAU,GAAG,YAAyB;AAAA,MAAxBC,KAAwB,uEAAhBF,IAAgB;AAAA,MAAVG,MAAU;AACxC,QAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AACA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,SAAL;AACI;AACA,YAAMC,KAAK,GAAGL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAlC,CAAd;;AACA,UAAGH,KAAH,EAAS;AACL;AACA,eAAOL,KAAK,CAACS,GAAN,CAAWF,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAjB,GAAsB,EAAC,GAAGD,CAAJ;AAAOG,UAAAA,GAAG,EAAEH,CAAC,CAACG,GAAF,GAAQ;AAApB,SAAtB,GAA+CH,CAA/D,CAAP;AACH,OAHD,MAGK;AACD,cAAML,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,eAAM,CACF,GAAGH,KADD,EAEF,EACI,GAAGE,OADP;AAEIQ,UAAAA,GAAG,EAAE;AAFT,SAFE,CAAN;AAOH;;AACD;;AAEJ,SAAK,SAAL;AACI,YAAMC,MAAM,GAAGX,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAlC,CAAf;;AACA,UAAGG,MAAH,EAAU;AACN,YAAGA,MAAM,CAACD,GAAP,KAAe,CAAlB,EAAqB;AACjB,iBAAOV,KAAK,CAACY,MAAN,CAAcL,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASG,MAAM,CAACH,EAAnC,CAAP;AACH,SAFD,MAEK;AACD,iBAAOR,KAAK,CAACS,GAAN,CAAWF,CAAD,IACjBA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAjB,GAAsB,EAAC,GAAGD,CAAJ;AAAOG,YAAAA,GAAG,EAAEH,CAAC,CAACG,GAAF,GAAQ;AAApB,WAAtB,GAA+CH,CADxC,CAAP;AAEH;AACJ;;AAED;;AAEA,SAAK,OAAL;AACI,YAAMM,MAAM,GAAGb,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASN,OAAO,CAACM,EAAlC,CAAf;AACA,aAAOR,KAAK,CAACY,MAAN,CAAcL,CAAD,IAAMA,CAAC,CAACC,EAAF,KAASK,MAAM,CAACL,EAAnC,CAAP;AAGA;;AAER;AACI,aAAOR,KAAP;AACA;AAzCR;AA4CH,CA9CD;;AAgDA,eAAeD,UAAf","sourcesContent":["import Products from \"../../../src/component/Products\";\r\n\r\nconst cart = [];\r\n\r\nconst handleCart = (state = cart, action) =>{\r\n    const product = action.payload;\r\n    switch(action.type){\r\n        case \"ADDITEM\":\r\n            //Check id product is already exist\r\n            const exist = state.find((x)=> x.id === product.id)\r\n            if(exist){\r\n                //increast the quantity\r\n                return state.map((x)=> x.id === product.id ? {...x, qty: x.qty + 1} : x);\r\n            }else{\r\n                const product = action.payload\r\n                return[\r\n                    ...state,\r\n                    {\r\n                        ...product,\r\n                        qty: 1,\r\n                    }\r\n                ]\r\n            }\r\n            break;\r\n        \r\n        case \"DELITEM\":\r\n            const exist1 = state.find((x)=> x.id === product.id)\r\n            if(exist1){\r\n                if(exist1.qty === 1) {\r\n                    return state.filter((x)=> x.id !== exist1.id );\r\n                }else{\r\n                    return state.map((x)=> \r\n                    x.id === product.id ? {...x, qty: x.qty - 1} : x);\r\n                }\r\n            }\r\n            \r\n            break;\r\n        \r\n            case \"HAPUS\":\r\n                const exist2 = state.find((x)=> x.id === product.id)\r\n                return state.filter((x)=> x.id !== exist2.id );\r\n            \r\n                \r\n                break;\r\n        \r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport default handleCart;"]},"metadata":{},"sourceType":"module"}